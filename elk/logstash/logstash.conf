input {
  file {
    type => "nginx_access"
    path => "/var/log/nginx/website_access.log"
    start_position => beginning
  }
  file {
    type => "nginx_error"
    path => "/var/log/nginx/website_error.log"
    start_position => beginning
  }
}

filter {
  if [type] == "nginx_access" {
    grok {
      patterns_dir => "./patterns"
      match => { "message" => "%{NGINXACCESS}"}
      remove_field => "message"
    }
    mutate {
      add_field => { "read_timestamp" => "%{@timestamp}" }
    }
    date {
      match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
      remove_field => "[nginx][access][time]"
    }
    useragent {
      source => "[nginx][access][agent]"
      target => "[nginx][access][user_agent]"
      remove_field => "[nginx][access][agent]"
    }
    geoip {
      source => "[nginx][access][remote_ip]"
      target => "[nginx][access][geoip]"
    }
  }
  else if [type] == "nginx_error" {
    grok {
      patterns_dir => "./patterns"
      match => { "message" => "%{NGINXERROR}"}
      remove_field => "message"
    }
    mutate {
      rename => { "@timestamp" => "read_timestamp" }
    }
    date {
      match => [ "[nginx][error][time]", "YYYY/MM/dd H:m:s" ]
      remove_field => "[nginx][error][time]"
    }
  }
}

output {
  elasticsearch {
    host => localhost
    cluster => "logstash"
  }
}